@page "/editor"
@using DemoBlog.Application.Models.Requests;
@using DemoBlog.BlazorClient.Services.HttpClients;
@using DemoBlog.BlazorClient.Utils;
@using PSC.Blazor.Components.MarkdownEditor
@using PSC.Blazor.Components.MarkdownEditor.EventsArgs
@using System.Net.Http.Json
@using System.Web;

@inject MediaBlobClient MediaBlobClient

<MudStack Spacing="2">
    <MudFileUpload T="IBrowserFile" Icon="@Icons.Material.Filled.Image" FilesChanged="UploadFiles" Hidden="false" Class="flex-1 align-content-center" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                       @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
        <ButtonTemplate>
            <div class="d-flex" style="height:200px">
                @if (string.IsNullOrEmpty(_imageDataUrl))
                {
                    <MudPaper Outlined="true" Class="@DragClass">
                        <MudText Typo="Typo.h6">Drag and drop here or click to add cover image</MudText>
                    </MudPaper>
                }
                else
                {
                    <MudImage Src="@_imageDataUrl" Class="rounded-lg flex-1" ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Contain" />
                }
            </div>
        </ButtonTemplate>
    </MudFileUpload>

    <MudToolBar DisableGutters="true" Class="gap-4">
        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
            <ButtonTemplate>
                <MudButton HtmlTag="label" Disabled="@(!String.IsNullOrEmpty(_imageDataUrl))" Color="Color.Primary" Variant="Variant.Filled" for="@context">Upload</MudButton>
            </ButtonTemplate>
        </MudFileUpload>
        <MudButton OnClick="Clear" Disabled="@(String.IsNullOrEmpty(_imageDataUrl))" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
    </MudToolBar>

    <MudTextField @bind-Value="PostTitle" Label="Post Title" HelperText="Enter title of your post" Variant="Variant.Outlined"></MudTextField>
    <MudTextField @bind-Value="PostSubTitle" Label="Post Sub-title" HelperText="Enter sub-title of your post" Variant="Variant.Outlined"></MudTextField>
    <MarkdownEditor Value="@PostContent" UploadImage="true" />


    <MudStack Row="true">
        <MudFab Color="Color.Success" StartIcon="@Icons.Material.Filled.Publish" />
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save" />
    </MudStack>
</MudStack>


@code {
    string PostContent = "## Lorem Ipsum \n Lorem ipsum dolor sit amet, consectetur adipiscing elit. In non finibus velit. Vestibulum non hendrerit nibh. Morbi ante eros, malesuada sit amet pharetra ut, accumsan a lorem. Nam fermentum, velit at lacinia hendrerit, nisi sem laoreet enim, sit amet dictum velit tortor eu risus.";
    string PostTitle;
    string PostSubTitle;

    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;

    private string _imageDataUrl;

    private string _postId = Guid.NewGuid().ToString();

    private async void UploadFiles(IBrowserFile file)
    {
        try
        {
            MemoryStream ms = new MemoryStream();
            await file.OpenReadStream().CopyToAsync(ms);
            _imageDataUrl = ms.ToBase64Image();
            StateHasChanged();
            await MediaBlobClient.UploadMedia(file, _postId);

        }
        catch (Exception e)
        {
            throw e;
        }
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }

    private void Clear()
    {
        _imageDataUrl = string.Empty;
        ClearDragClass();
    }
}